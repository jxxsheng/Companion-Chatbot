{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jun Sheng\\\\OneDrive\\\\Desktop\\\\Companion-Chatbot\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { fetchResponse } from \"../api/fetchResponse\";\nimport SpeechRecognitionComponent from \"./SpeechRecognition\";\nimport SpeechSynthesisComponent from \"./SpeechSynthesis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const chatEndRef = useRef(null); // Reference for auto-scrolling\n\n  // Auto-scroll function\n  const scrollToBottom = () => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  // Scroll to the bottom whenever messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const botIntroMessage = \"Tap the Speak button or press the Spacebar to start talking. Speak clearly for the best experience.\";\n  useEffect(() => {\n    addBotMessage(botIntroMessage);\n  }, []);\n  const addBotMessage = text => {\n    setMessages(prev => [...prev, {\n      role: \"bot\",\n      content: text\n    }]);\n    setTimeout(() => {\n      setIsSpeaking(true);\n      SpeechSynthesisComponent.speak(text, () => {\n        setIsSpeaking(false);\n      });\n    }, 500);\n  };\n  const handleUserMessage = async text => {\n    setMessages(prev => [...prev, {\n      role: \"user\",\n      content: text\n    }]);\n    const response = await fetchResponse(text);\n    addBotMessage(response);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\uD83D\\uDC69\\u200D\\uD83E\\uDDB0 EVERLY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.role === \"user\" ? \"user\" : \"bot\"}`,\n        children: [msg.role === \"user\" ? \"üë§\" : \"ü§ñ\", \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpeechRecognitionComponent, {\n      onResult: handleUserMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"bY9n1TH6Ty0JX95e1tl6aq3JXo0=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useEffect","useRef","useState","fetchResponse","SpeechRecognitionComponent","SpeechSynthesisComponent","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","isSpeaking","setIsSpeaking","chatEndRef","scrollToBottom","_chatEndRef$current","current","scrollIntoView","behavior","botIntroMessage","addBotMessage","text","prev","role","content","setTimeout","speak","handleUserMessage","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","ref","onResult","_c","$RefreshReg$"],"sources":["C:/Users/Jun Sheng/OneDrive/Desktop/Companion-Chatbot/src/components/Chatbot.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { fetchResponse } from \"../api/fetchResponse\";\nimport SpeechRecognitionComponent from \"./SpeechRecognition\";\nimport SpeechSynthesisComponent from \"./SpeechSynthesis\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const chatEndRef = useRef(null); // Reference for auto-scrolling\n\n  // Auto-scroll function\n  const scrollToBottom = () => {\n    chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  // Scroll to the bottom whenever messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const botIntroMessage =\n    \"Tap the Speak button or press the Spacebar to start talking. Speak clearly for the best experience.\";\n\n  useEffect(() => {\n    addBotMessage(botIntroMessage);\n  }, []);\n\n  const addBotMessage = (text) => {\n    setMessages((prev) => [...prev, { role: \"bot\", content: text }]);\n    setTimeout(() => {\n      setIsSpeaking(true);\n      SpeechSynthesisComponent.speak(text, () => {\n        setIsSpeaking(false);\n      });\n    }, 500);\n  };\n\n  const handleUserMessage = async (text) => {\n    setMessages((prev) => [...prev, { role: \"user\", content: text }]);\n\n    const response = await fetchResponse(text);\n    addBotMessage(response);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h1 className=\"title\">üë©‚Äçü¶∞ EVERLY</h1>\n\n      <div className=\"chat-box\">\n        {messages.map((msg, index) => (\n          <div\n            key={index}\n            className={`message ${msg.role === \"user\" ? \"user\" : \"bot\"}`}\n          >\n            {msg.role === \"user\" ? \"üë§\" : \"ü§ñ\"} {msg.content}\n          </div>\n        ))}\n        {/* Empty div to track scroll position */}\n        <div ref={chatEndRef} />\n      </div>\n\n      <SpeechRecognitionComponent onResult={handleUserMessage} />\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,0BAA0B,MAAM,qBAAqB;AAC5D,OAAOC,wBAAwB,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMY,UAAU,GAAGb,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEjC;EACA,MAAMc,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,mBAAA;IAC3B,CAAAA,mBAAA,GAAAF,UAAU,CAACG,OAAO,cAAAD,mBAAA,uBAAlBA,mBAAA,CAAoBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC5D,CAAC;;EAED;EACAnB,SAAS,CAAC,MAAM;IACde,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;EAEd,MAAMU,eAAe,GACnB,qGAAqG;EAEvGpB,SAAS,CAAC,MAAM;IACdqB,aAAa,CAACD,eAAe,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,aAAa,GAAIC,IAAI,IAAK;IAC9BX,WAAW,CAAEY,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE,KAAK;MAAEC,OAAO,EAAEH;IAAK,CAAC,CAAC,CAAC;IAChEI,UAAU,CAAC,MAAM;MACfb,aAAa,CAAC,IAAI,CAAC;MACnBR,wBAAwB,CAACsB,KAAK,CAACL,IAAI,EAAE,MAAM;QACzCT,aAAa,CAAC,KAAK,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,MAAMe,iBAAiB,GAAG,MAAON,IAAI,IAAK;IACxCX,WAAW,CAAEY,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEH;IAAK,CAAC,CAAC,CAAC;IAEjE,MAAMO,QAAQ,GAAG,MAAM1B,aAAa,CAACmB,IAAI,CAAC;IAC1CD,aAAa,CAACQ,QAAQ,CAAC;EACzB,CAAC;EAED,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BxB,OAAA;MAAIuB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEvC5B,OAAA;MAAKuB,SAAS,EAAC,UAAU;MAAAC,QAAA,GACtBrB,QAAQ,CAAC0B,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvB/B,OAAA;QAEEuB,SAAS,EAAE,WAAWO,GAAG,CAACb,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,EAAG;QAAAO,QAAA,GAE5DM,GAAG,CAACb,IAAI,KAAK,MAAM,GAAG,IAAI,GAAG,IAAI,EAAC,GAAC,EAACa,GAAG,CAACZ,OAAO;MAAA,GAH3Ca,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACN,CAAC,eAEF5B,OAAA;QAAKgC,GAAG,EAAEzB;MAAW;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eAEN5B,OAAA,CAACH,0BAA0B;MAACoC,QAAQ,EAAEZ;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAAC1B,EAAA,CA3DID,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AA6Db,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}