{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jun Sheng\\\\OneDrive\\\\Desktop\\\\chatbot\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { fetchResponse } from \"../api/fetchResponse\";\nimport SpeechRecognitionComponent from \"./SpeechRecognition\";\nimport SpeechSynthesisComponent from \"./SpeechSynthesis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n\n  // Bot's introduction message\n  const botIntroMessage = \"Hello! I'm your Companion Bot. How can I assist you today?\";\n\n  // Function to add messages and trigger speech\n  const addBotMessage = text => {\n    setMessages(prev => [...prev, {\n      role: \"bot\",\n      content: text\n    }]);\n    setTimeout(() => {\n      setIsSpeaking(true);\n      SpeechSynthesisComponent.speak(text, () => {\n        setIsSpeaking(false);\n      });\n    }, 500);\n  };\n\n  // Introduce the chatbot when the component mounts\n  useEffect(() => {\n    addBotMessage(botIntroMessage);\n  }, []);\n  const handleUserMessage = async text => {\n    setMessages(prev => [...prev, {\n      role: \"user\",\n      content: text\n    }]);\n    const response = await fetchResponse(text);\n    addBotMessage(response);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\uD83E\\uDDBE Companion Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.role === \"user\" ? \"user\" : \"bot\"}`,\n        children: [msg.role === \"user\" ? \"ðŸ‘¤\" : \"ðŸ¤–\", \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpeechRecognitionComponent, {\n      onResult: handleUserMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"TWpDPOlgUYO9sEMAthSR7niX7Ro=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useEffect","useState","fetchResponse","SpeechRecognitionComponent","SpeechSynthesisComponent","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","isSpeaking","setIsSpeaking","botIntroMessage","addBotMessage","text","prev","role","content","setTimeout","speak","handleUserMessage","response","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onResult","_c","$RefreshReg$"],"sources":["C:/Users/Jun Sheng/OneDrive/Desktop/chatbot/src/components/Chatbot.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { fetchResponse } from \"../api/fetchResponse\";\nimport SpeechRecognitionComponent from \"./SpeechRecognition\";\nimport SpeechSynthesisComponent from \"./SpeechSynthesis\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n\n  // Bot's introduction message\n  const botIntroMessage = \"Hello! I'm your Companion Bot. How can I assist you today?\";\n\n  // Function to add messages and trigger speech\n  const addBotMessage = (text) => {\n    setMessages((prev) => [...prev, { role: \"bot\", content: text }]);\n    setTimeout(() => {\n      setIsSpeaking(true);\n      SpeechSynthesisComponent.speak(text, () => {\n        setIsSpeaking(false);\n      });\n    }, 500);\n  };\n\n  // Introduce the chatbot when the component mounts\n  useEffect(() => {\n    addBotMessage(botIntroMessage);\n  }, []);\n\n  const handleUserMessage = async (text) => {\n    setMessages((prev) => [...prev, { role: \"user\", content: text }]);\n\n    const response = await fetchResponse(text);\n    addBotMessage(response);\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h1 className=\"title\">ðŸ¦¾ Companion Bot</h1>\n\n      <div className=\"chat-box\">\n        {messages.map((msg, index) => (\n          <div\n            key={index}\n            className={`message ${msg.role === \"user\" ? \"user\" : \"bot\"}`}\n          >\n            {msg.role === \"user\" ? \"ðŸ‘¤\" : \"ðŸ¤–\"} {msg.content}\n          </div>\n        ))}\n      </div>\n\n      <SpeechRecognitionComponent onResult={handleUserMessage} />\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,0BAA0B,MAAM,qBAAqB;AAC5D,OAAOC,wBAAwB,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMY,eAAe,GAAG,4DAA4D;;EAEpF;EACA,MAAMC,aAAa,GAAIC,IAAI,IAAK;IAC9BL,WAAW,CAAEM,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE,KAAK;MAAEC,OAAO,EAAEH;IAAK,CAAC,CAAC,CAAC;IAChEI,UAAU,CAAC,MAAM;MACfP,aAAa,CAAC,IAAI,CAAC;MACnBR,wBAAwB,CAACgB,KAAK,CAACL,IAAI,EAAE,MAAM;QACzCH,aAAa,CAAC,KAAK,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;;EAED;EACAZ,SAAS,CAAC,MAAM;IACdc,aAAa,CAACD,eAAe,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,iBAAiB,GAAG,MAAON,IAAI,IAAK;IACxCL,WAAW,CAAEM,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEH;IAAK,CAAC,CAAC,CAAC;IAEjE,MAAMO,QAAQ,GAAG,MAAMpB,aAAa,CAACa,IAAI,CAAC;IAC1CD,aAAa,CAACQ,QAAQ,CAAC;EACzB,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BlB,OAAA;MAAIiB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE3CtB,OAAA;MAAKiB,SAAS,EAAC,UAAU;MAAAC,QAAA,EACtBf,QAAQ,CAACoB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBzB,OAAA;QAEEiB,SAAS,EAAE,WAAWO,GAAG,CAACb,IAAI,KAAK,MAAM,GAAG,MAAM,GAAG,KAAK,EAAG;QAAAO,QAAA,GAE5DM,GAAG,CAACb,IAAI,KAAK,MAAM,GAAG,IAAI,GAAG,IAAI,EAAC,GAAC,EAACa,GAAG,CAACZ,OAAO;MAAA,GAH3Ca,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAENtB,OAAA,CAACH,0BAA0B;MAAC6B,QAAQ,EAAEX;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAACpB,EAAA,CAhDID,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAkDb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}