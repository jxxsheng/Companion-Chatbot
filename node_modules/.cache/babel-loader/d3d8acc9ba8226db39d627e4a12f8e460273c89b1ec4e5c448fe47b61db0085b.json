{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jun Sheng\\\\OneDrive\\\\Desktop\\\\chatbot\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { fetchResponse } from \"../api/fetchResponse\";\nimport SpeechRecognitionComponent from \"./SpeechRecognition\";\nimport SpeechSynthesisComponent from \"./SpeechSynthesis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const handleUserMessage = async text => {\n    setMessages(prev => [...prev, {\n      role: \"user\",\n      content: text\n    }]);\n    const response = await fetchResponse(text);\n    setMessages(prev => [...prev, {\n      role: \"bot\",\n      content: response\n    }]);\n\n    // Speak the chatbot's response\n    setTimeout(() => {\n      console.log(\"Triggering speech synthesis...\");\n      SpeechSynthesisComponent.speak(response, () => {\n        console.log(\"Finished speaking, resuming listening...\");\n      });\n    }, 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Companion Bot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: msg.role === \"user\" ? \"text-blue-600\" : \"text-green-600\",\n        children: [msg.role === \"user\" ? \"ðŸ‘¤\" : \"ðŸ¤–\", \" \", msg.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SpeechRecognitionComponent, {\n      onResult: handleUserMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","fetchResponse","SpeechRecognitionComponent","SpeechSynthesisComponent","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","handleUserMessage","text","prev","role","content","response","setTimeout","console","log","speak","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onResult","_c","$RefreshReg$"],"sources":["C:/Users/Jun Sheng/OneDrive/Desktop/chatbot/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { fetchResponse } from \"../api/fetchResponse\";\nimport SpeechRecognitionComponent from \"./SpeechRecognition\";\nimport SpeechSynthesisComponent from \"./SpeechSynthesis\";\n\nconst Chatbot = () => {\n  const [messages, setMessages] = useState([]);\n\n  const handleUserMessage = async (text) => {\n    setMessages((prev) => [...prev, { role: \"user\", content: text }]);\n\n    const response = await fetchResponse(text);\n    setMessages((prev) => [...prev, { role: \"bot\", content: response }]);\n\n    // Speak the chatbot's response\n    setTimeout(() => {\n      console.log(\"Triggering speech synthesis...\");\n      SpeechSynthesisComponent.speak(response, () => {\n        console.log(\"Finished speaking, resuming listening...\");\n      });\n    }, 500);\n  };\n\n  return (\n    <div className=\"p-4 text-center\">\n      <h1 className=\"text-2xl font-bold\">Companion Bot</h1>\n      <div className=\"mt-4\">\n        {messages.map((msg, index) => (\n          <p key={index} className={msg.role === \"user\" ? \"text-blue-600\" : \"text-green-600\"}>\n            {msg.role === \"user\" ? \"ðŸ‘¤\" : \"ðŸ¤–\"} {msg.content}\n          </p>\n        ))}\n      </div>\n      <SpeechRecognitionComponent onResult={handleUserMessage} />\n    </div>\n  );\n};\n\nexport default Chatbot;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,sBAAsB;AACpD,OAAOC,0BAA0B,MAAM,qBAAqB;AAC5D,OAAOC,wBAAwB,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMU,iBAAiB,GAAG,MAAOC,IAAI,IAAK;IACxCF,WAAW,CAAEG,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAEH;IAAK,CAAC,CAAC,CAAC;IAEjE,MAAMI,QAAQ,GAAG,MAAMd,aAAa,CAACU,IAAI,CAAC;IAC1CF,WAAW,CAAEG,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAE,KAAK;MAAEC,OAAO,EAAEC;IAAS,CAAC,CAAC,CAAC;;IAEpE;IACAC,UAAU,CAAC,MAAM;MACfC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;MAC7Cf,wBAAwB,CAACgB,KAAK,CAACJ,QAAQ,EAAE,MAAM;QAC7CE,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;MACzD,CAAC,CAAC;IACJ,CAAC,EAAE,GAAG,CAAC;EACT,CAAC;EAED,oBACEb,OAAA;IAAKe,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BhB,OAAA;MAAIe,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrDpB,OAAA;MAAKe,SAAS,EAAC,MAAM;MAAAC,QAAA,EAClBb,QAAQ,CAACkB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBvB,OAAA;QAAee,SAAS,EAAEO,GAAG,CAACd,IAAI,KAAK,MAAM,GAAG,eAAe,GAAG,gBAAiB;QAAAQ,QAAA,GAChFM,GAAG,CAACd,IAAI,KAAK,MAAM,GAAG,IAAI,GAAG,IAAI,EAAC,GAAC,EAACc,GAAG,CAACb,OAAO;MAAA,GAD1Cc,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpB,OAAA,CAACH,0BAA0B;MAAC2B,QAAQ,EAAEnB;IAAkB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/BID,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}