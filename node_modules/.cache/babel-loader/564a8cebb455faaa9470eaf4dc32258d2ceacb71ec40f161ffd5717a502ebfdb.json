{"ast":null,"code":"export const fetchResponse = async text => {\n  try {\n    const response = await fetch(\"https://api.perplexity.ai/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer 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\"\n      },\n      body: JSON.stringify({\n        model: \"sonar-pro\",\n        messages: [{\n          role: \"system\",\n          content: \"You are an elder companion chatbot.\\\n                      Speak in a warm but direct manner. \\\n                      Keep your responses short and easy to understand. \\\n                      Reply in only 1 sentence. \\\n                      Do not provide any citations. \\\n                      \"\n        }, {\n          role: \"user\",\n          content: text\n        }]\n      })\n    });\n    const data = await response.json();\n    return data.choices ? data.choices[0].message.content : \"Sorry, I didn't understand.\";\n  } catch (error) {\n    console.error(\"Error fetching chatbot response:\", error);\n    return \"I'm having trouble connecting right now.\";\n  }\n};","map":{"version":3,"names":["fetchResponse","text","response","fetch","method","headers","Authorization","body","JSON","stringify","model","messages","role","content","data","json","choices","message","error","console"],"sources":["C:/Users/Jun Sheng/OneDrive/Desktop/chatbot/src/api/fetchResponse.js"],"sourcesContent":["export const fetchResponse = async (text) => {\n    try {\n      const response = await fetch(\"https://api.perplexity.ai/chat/completions\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer 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\",\n        },\n        body: JSON.stringify({\n          model: \"sonar-pro\",\n          messages: [\n            {\n              role: \"system\",\n            content: \"You are an elder companion chatbot.\\\n                      Speak in a warm but direct manner. \\\n                      Keep your responses short and easy to understand. \\\n                      Reply in only 1 sentence. \\\n                      Do not provide any citations. \\\n                      \",\n            },\n            {\n              role: \"user\",\n              content: text,\n            }\n          ],\n        }),\n      });\n  \n      const data = await response.json();\n      return data.choices ? data.choices[0].message.content : \"Sorry, I didn't understand.\";\n    } catch (error) {\n      console.error(\"Error fetching chatbot response:\", error);\n      return \"I'm having trouble connecting right now.\";\n    }\n  };\n  \n  "],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG,MAAOC,IAAI,IAAK;EACzC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4CAA4C,EAAE;MACzEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAE;MACjB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnBC,KAAK,EAAE,WAAW;QAClBC,QAAQ,EAAE,CACR;UACEC,IAAI,EAAE,QAAQ;UAChBC,OAAO,EAAE;AACrB;AACA;AACA;AACA;AACA;QACY,CAAC,EACD;UACED,IAAI,EAAE,MAAM;UACZC,OAAO,EAAEZ;QACX,CAAC;MAEL,CAAC;IACH,CAAC,CAAC;IAEF,MAAMa,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAACE,OAAO,GAAGF,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAACJ,OAAO,GAAG,6BAA6B;EACvF,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAO,0CAA0C;EACnD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}